export const summaryData = {
  1: `📘 **1. 정보 보안 개론**

이 페이지에서는 정보 보안 및 암호학에 대한 기본 개념을 소개합니다. 정보 시스템 자원의 무결성, 가용성, 기밀성을 유지하기 위한 보호 개념(CIA Triad)을 중심으로 정의되며, 컴퓨터 보안이란 하드웨어, 소프트웨어, 펌웨어, 데이터, 통신을 포함한 시스템 자원을 보호하는 것입니다. 여기에는 다음 세 가지 주요 요소가 포함됩니다:

1️⃣ **Confidentiality(기밀성)**: 데이터 기밀성과 개인 프라이버시 보장을 의미합니다.

2️⃣ **Integrity(무결성)**: 데이터 및 시스템의 무결성, 즉 정보가 변경되지 않았음을 의미합니다.

3️⃣ **Availability(가용성)**: 정보 및 시스템이 인가된 사용자에게 언제든지 접근 가능해야 한다는 개념입니다.

또한 추가적으로 **Authenticity(진위성)**, **Accountability(책임 추적성)** 같은 요구사항도 소개됩니다.

🔑 주요 용어:
- Adversary (위협 행위자): 시스템을 공격하는 주체
- Attack (공격): 위협으로부터 유래된 시스템 보안에 대한 공격 행위
- Countermeasure (대책): 위협이나 취약점을 줄이기 위한 조치
- Risk (위험): 특정 위협이 특정 취약점을 이용해 손해를 끼칠 확률
- Security Policy (보안 정책): 민감하고 중요한 자산 보호를 위한 규칙과 관행
- Threat (위협): 보안을 위반할 수 있는 잠재적 가능성
- Vulnerability (취약점): 시스템 설계 또는 운영상 약점

📎 요약 설명: 정보 보안의 개념과 기본적인 용어들을 정리한 입문 페이지로, 추후 다룰 모든 보안 개념의 기초가 되는 부분입니다.`,

  2: "🔐 2. 보안 개념 및 상호 관계: 이 페이지에서는 보안 관련 개념들이 서로 어떻게 연결되는지 시각적으로 설명합니다. 취약점과 위협, 공격과 방어의 관계를 도식화하여 개념 간 연관성을 쉽게 파악할 수 있게 합니다.",
  3: "⚔️ 3. 취약점, 공격, 대책의 유형: 시스템의 취약점(무결성 손상, 기밀성 누출, 가용성 상실)과 공격 유형(수동/능동, 내부/외부), 이를 방지하기 위한 대응책(예방, 탐지, 복구)을 설명합니다.",
  4: "🌐 4. 컴퓨터 보안의 범위: 보안이 적용되는 시스템, 구성 요소, 운영 절차 등을 포괄적으로 설명하며, 조직 내 보안이 어떻게 구성되어야 하는지를 다룹니다.",
  5: "🧱 5. 보안 설계의 기본 원칙: 최소 권한, 모듈화, 분리, 개방형 설계 등 여러 가지 보안 설계 원칙을 설명하며, 보안성이 높은 시스템을 구성하는 기반 개념을 소개합니다.",
  6: "🛡️ 6. 공격 표면: 시스템의 네트워크, 소프트웨어, 사람(사회공학 포함) 측면에서 발생할 수 있는 보안 취약점을 정의하고, 이를 최소화하는 것이 보안의 핵심이라고 설명합니다.",
  7: "📜 7. 보안 전략: 보안 정책 수립, 구현, 보장, 평가의 4단계로 나눠 설명합니다. 각 단계는 보안을 체계적으로 관리하기 위한 전략 수립에 필수적입니다.",
  8: "🔏 8. 암호학 소개: 고전 암호에서 현대 암호학까지, 보안 기술의 변천사를 간단히 설명하고 암호 기초 개념 및 활용 영역(무결성, 인증, 키 분배 등)을 소개합니다.",
  9: "📚 9. 고전 암호학: 암호학의 역사적 배경과 고전적 암호 방법(예: 시저 암호 등)에 대한 개념적 설명이 포함됩니다.",
  10: "📦 10. 현대 암호학과 기술 구성요소: 해시 함수, 난수 생성기, 암호화, 전자서명, 키 공유 등 현대 암호학의 기술 구성요소를 소개합니다.",
  11: "🔐 11. 암호화 개요: 대칭키와 비대칭키 암호화 개념을 도입하며, 각 방식의 장단점을 설명합니다.",
  12: "🗝️ 12. 대칭키 암호화: 송수신자가 같은 키를 공유하는 방식으로, 빠르지만 키 공유에 제약이 있습니다. 대표 알고리즘: AES, DES 등.",
  13: "🔓 13. 비대칭키 암호화: 공개키와 개인키를 사용하는 방식으로, 키 관리가 용이하나 속도가 느립니다. 대표 알고리즘: RSA, ElGamal 등.",
  14: "📄 14. 암호 관련 용어 정리: 평문, 암호문, 암호화/복호화 알고리즘, 키의 정의 등을 간단히 정리합니다.",
  15: "📢 15. 케르크호프의 원칙: 알고리즘 자체는 공개되어도 안전해야 한다는 개념으로, 보안은 키의 비밀성에 의존해야 한다는 핵심 원칙을 설명합니다.",
  16: "🧠 16. 암호 공격의 유형: 무차별 공격과 암호해독 공격(암호문만 가진 경우, 평문-암호문 쌍 존재 등)의 차이점을 설명합니다.",
  17: "🔁 17. 시프트 암호: 문자 위치를 일정 수만큼 이동하는 방식으로, 시저 암호의 예시와 공격법(브루트포스 등)을 함께 설명합니다.",
  18: "🧮 18. 아핀 암호: 선형 변환 방식의 고전 암호. 키 쌍 (α, β) 사용, 수학적 계산이 필요하며 공격 방식도 설명됩니다.",
  19: "🔄 19. 치환 암호: 알파벳의 위치를 임의로 재배열하여 암호화하는 방식으로, 키 공간이 매우 큽니다. 통계적 분석에 의해 공격 가능성이 있음.",
  20: "📊 20. 통계 분석 기법: 평문과 암호문의 문자 출현 빈도를 비교하여 치환 암호를 해독하는 기법을 소개합니다.",
  21: "🔍 21. 통계 분석 예제: 실제 암호문을 통계적으로 분석하여 평문을 복원하는 과정을 단계별로 보여줍니다.",
  22: "🔡 22. 비제네르 암호: 다중 문자 키를 사용하는 다중 치환 암호로, 공격 난이도가 높지만 특정 방법으로 해독 가능.",
  23: "🔁 23. 전치 암호: 문자 순서를 바꾸는 방식으로, 수학적 행렬을 활용해 암호화/복호화가 이루어짐. 힐 암호로도 확장 가능.",
  24: "🔄 24. 선형 피드백 시프트 레지스터(LFSR): 선형 함수를 이용한 난수 생성 방식으로, 스트림 암호 설계의 기반이 되는 개념.",
  25: "🔢 25. LFSR 암호 및 공격 기법: 초기 키 값을 바탕으로 생성된 스트림을 평문과 XOR하여 암호화. 공격 시에는 선형 관계를 역산해 키를 복원.",
  26: "🧨 26. 원타임 패드(OTP): 키를 한 번만 사용하고 폐기하는 암호 방식으로, 이론상 완벽한 보안을 제공하나 현실적 활용에는 비효율적.",
  27: "📚 27. 참고 문헌: 암호학 및 정보 보안 이론 관련 주요 교재(Introduction to Modern Cryptography 등) 목록.",
  28: "📖 28. 복습 슬라이드 1: 강의 전반 내용을 요약하며 핵심 개념을 정리하는 복습 페이지입니다.",
  29: "📖 29. 복습 슬라이드 2: 암호화 유형별 비교 및 사례 정리를 포함한 추가 복습 자료.",
  30: "🧩 30. 보안 문제 예제 1: 학습 내용을 기반으로 한 간단한 문제 풀이 예시.",
  31: "🧩 31. 보안 문제 예제 2: 고급 수준의 암호 공격 사례와 방어 전략 관련 예시 문제.",
  32: "✅ 32. 정리 및 다음 강의 예고: 전체 강의 요약 및 다음 강의 주제 소개로 마무리됩니다.",
};
